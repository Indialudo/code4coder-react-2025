import { useState } from "react";
import ScorePage from '../ScorePage/ScorePage';

const QuizPage = ({ quizData }) => {
  const [question, setQuestion] = useState(0);
  const [progressBar, setProgressBar] = useState(10);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [selectedAnswer, setSelectedAnswer] = useState("");
  const [score, setScore] = useState(0);
  const [showNextQuestion, setShowNextQuestion] = useState(false);
  const [error, setError] = useState(false);

  const currentQuestion = quizData.questions?.[question];
  const numberOfQuestions = quizData.questions?.length;

  const handleSubmit = () => {
    if (selectedAnswer === "") {
      setError(true);
      setTimeout(() => setError(false), 2000);
      return;
    }

    if (selectedAnswer === currentQuestion?.answer) {
      setScore(score + 1);
    }
    setShowNextQuestion(true);
    setIsSubmitted(true);
  };

  const handleSelectedAnswer = (answer) => setSelectedAnswer(answer);

  const handleNextQuestion = () => {
    setIsSubmitted(false);
    setSelectedAnswer("");
    setQuestion(question + 1);
    setProgressBar(progressBar + 10);
    setShowNextQuestion(false);
  };

  return (
    <>
      {question === numberOfQuestions ? (
        <ScorePage
          score={score}
          title={quizData.title}
          icon={quizData.icon}
          iconbg={quizData.iconbg}
          numberOfQuestions={numberOfQuestions}
        />
      ) : (
        <section className="mt-6 px-4 sm:px-10 xl:flex xl:w-full xl:px-0" style={{ height: "100vh" }}>
          <div className="mb-6 xl:mb-0 xl:flex xl:h-[400px] xl:w-1/2 xl:flex-col xl:justify-between">
            <div className="xl:w-[420px]">
              <p className="text-xs italic text-greyNavy dark:text-lightBluish sm:text-[16px]">
                Question {question + 1} of {numberOfQuestions}
              </p>
              <h2 className="text-[18px] font-medium sm:text-[28px]">
                {currentQuestion?.question}
              </h2>
            </div>
            <div className="mt-4 flex h-3 w-full items-center justify-start rounded-full bg-white px-1 dark:bg-navy xl:w-[420px]">
              <span className="h-2 rounded-[104px] bg-purples" style={{ width: `${progressBar}%` }}></span>
            </div>
          </div>

          <div className="xl:w-1/2">
            <ul className="space-y-2 pb-3 sm:space-y-4 sm:pb-5">
              {currentQuestion?.options.map((option, index) => {
                const letter = String.fromCharCode(65 + index);
                const isSelected = selectedAnswer === option;
                const isCorrect = currentQuestion?.answer === option;

                const isSubmittedCorrect = isSubmitted && isCorrect;
                const isSubmittedIncorrect = isSubmitted && isSelected && !isCorrect;

                const liClass = `
                  flex items-center justify-between gap-4 rounded-xl border-[2px] p-2 sm:p-3 sm:rounded-2xl
                  text-sm sm:text-base xl:w-[520px]
                  ${
                    isSubmittedCorrect
                      ? 'bg-white border-green dark:bg-navy'
                      : isSubmittedIncorrect
                      ? 'bg-white border-red dark:bg-navy'
                      : isSelected
                      ? 'bg-[#F3F3F3] border-purple dark:bg-[#3B2A4C]'
                      : 'bg-white border-white dark:bg-navy dark:border-navy cursor-pointer group'
                  }
                `;

                const spanClass = `
                  flex h-9 w-9 items-center justify-center rounded-md text-[16px] uppercase text-greyNavy
                  sm:h-12 sm:w-12 sm:rounded-lg sm:text-[24px]
                  ${
                    isSubmittedCorrect
                      ? 'bg-green text-white'
                      : isSubmittedIncorrect
                      ? 'bg-red text-white'
                      : isSelected
                      ? 'bg-purples text-white'
                      : 'bg-lightGrey group-hover:bg-[#F6E7FF] group-hover:text-purple'
                  }
                `;

                return (
                  <li
                    key={index}
                    onClick={() => handleSelectedAnswer(option)}
                    className={liClass}
                  >
                    <span className={spanClass}>{letter}</span>
                    <p className="w-[180px] text-sm sm:w-[400px] sm:text-[22px] sm:leading-snug">
                      {option}
                    </p>
                    <span className="ml-auto h-7 w-7 sm:h-9 sm:w-9">
                      {isSubmitted && isCorrect ? (
                        <img src="/quizImg/icon-correct.svg" alt="Correct" />
                      ) : isSubmitted && isSelected && !isCorrect ? (
                        <img src="/quizImg/icon-incorrect.svg" alt="Incorrect" />
                      ) : null}
                    </span>
                  </li>
                );
              })}
            </ul>

            <button
              className="mt-2 h-12 w-full rounded-lg bg-purples py-1.5 text-sm font-semibold text-white transition duration-200 ease-in-out hover:bg-btnHover sm:h-[72px] sm:rounded-2xl sm:text-[22px] xl:w-[520px]"
              onClick={showNextQuestion ? handleNextQuestion : handleSubmit}
            >
              {showNextQuestion ? "Next Question" : "Submit Answer"}
            </button>

            {error && (
              <p className="mt-2 flex items-center justify-center gap-2 text-[16px] text-red sm:text-xl">
                <img src="/quizImg/icon-incorrect.svg" alt="Error" />
                <span>Please select an answer</span>
              </p>
            )}
          </div>
        </section>
      )}
    </>
  );
};

export default QuizPage;
